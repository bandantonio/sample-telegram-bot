name: check-stackoverflow
run-name: ${{ github.event_name == 'schedule' && 'check-stackoverflow-cron' || 'check-stackoverflow' }}

on:
  push:
    branches:
      - main
  schedule:
  - cron: '0 */6 * * *'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  node-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/node-cache
        id: cache-node-modules
        with:
          node-version: '16'
      - run: npm i
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  check-stackoverflow:
    name: ${{ github.event_name == 'schedule' && '[Scheduled] Check StackOverflow' || 'Check StackOverflow' }}
    needs: node-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/node-cache
        id: cache-node-modules
        with:
          node-version: '16'

      - name: Puppeteer check
        id: puppeteer-check
        uses: maku693/action-puppeteer-script@v0
        env:
          SO_USERNAME: ${{ secrets.SO_USERNAME }}
          SO_PASS: ${{ secrets.SO_PASS }}
          SO_ID: ${{ secrets.SO_ID }}
        with:
          script: |
            const page = await browser.newPage();
            await page.goto('https://stackoverflow.com/users/login', { waitUntil: 'networkidle2' });
            await page.waitForFunction(() => window.OneTrust.RejectAll() == undefined);
            await page.type('#email', process.env.SO_USERNAME);
            await page.type('#password', process.env.SO_PASS);
            await page.keyboard.press('Enter');
            await page.waitForNavigation({ waitUntil: 'domcontentloaded' });
            await page.goto(`https://stackoverflow.com/users/${process.env.SO_ID}`);
            await page.waitForSelector('#js-daily-access-calendar-container');
            let daysString = await page.$eval('#js-daily-access-calendar-container > button > div:nth-child(2)', el => el.textContent);
            
            return daysString;

      - run: echo ${{ steps.puppeteer-check.outputs.result }}

      - name: Update Notion page
        uses: actions/github-script@v4
        env:
          DAYS: ${{ steps.puppeteer-check.outputs.result }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          DB_ID: ${{ secrets.DB_ID }}
        with:
          script: |
            const { DAYS, NOTION_TOKEN, DB_ID } = process.env;
            const script = require(`${{ github.workspace}}/update-notion-db.js`);
            script(`${DAYS}`, `${NOTION_TOKEN}`, `${DB_ID}`);
